plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.sonarqube' version '4.3.0.3225'
	id 'jacoco'
}

group = 'com.devs'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
	sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sonar {
	properties {
		property "sonar.projectKey", "Gerentes-dev_cutit"
		property "sonar.organization", "gerentes-dev"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core:9.22.1'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.postgresql:postgresql:42.7.2'
}

tasks.named('test') {
	useJUnitPlatform()
}


jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect { file ->
			fileTree(dir: file, exclude: [
					"com/devs/cutit/model/**",
					"com/devs/cutit/DTO/**"
			])
		}))
	}
}